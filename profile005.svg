<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: wordcount02 Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 768)">
<title>wordcount02</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-768 817.5,-768 817.5,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-605 8,-756 512,-756 512,-605 8,-605"/>
</g>
<!-- File: wordcount02 -->
<g id="node1" class="node">
<title>File: wordcount02</title>
<g id="a_node1"><a xlink:title="wordcount02">
<polygon fill="#f8f8f8" stroke="black" points="504,-748 16,-748 16,-613 504,-613 504,-748"/>
<text text-anchor="start" x="24" y="-731.2" font-family="Times,serif" font-size="16.00">File: wordcount02</text>
<text text-anchor="start" x="24" y="-713.2" font-family="Times,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="24" y="-695.2" font-family="Times,serif" font-size="16.00">Time: Mar 10, 2023 at 8:52am (UTC)</text>
<text text-anchor="start" x="24" y="-677.2" font-family="Times,serif" font-size="16.00">Duration: 201.50ms, Total samples = 80ms (39.70%)</text>
<text text-anchor="start" x="24" y="-659.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 80ms, 100% of 80ms total</text>
<text text-anchor="start" x="24" y="-622.2" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="runtime.mallocgc (60ms)">
<polygon fill="#edd7d5" stroke="#b20e00" points="679.5,-246 452.5,-246 452.5,-134 679.5,-134 679.5,-246"/>
<text text-anchor="middle" x="566" y="-222.8" font-family="Times,serif" font-size="24.00">runtime</text>
<text text-anchor="middle" x="566" y="-196.8" font-family="Times,serif" font-size="24.00">mallocgc</text>
<text text-anchor="middle" x="566" y="-170.8" font-family="Times,serif" font-size="24.00">30ms (37.50%)</text>
<text text-anchor="middle" x="566" y="-144.8" font-family="Times,serif" font-size="24.00">of 60ms (75.00%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="runtime.acquirem (10ms)">
<polygon fill="#ede5de" stroke="#b27642" points="471.5,-68 318.5,-68 318.5,0 471.5,0 471.5,-68"/>
<text text-anchor="middle" x="395" y="-49.6" font-family="Times,serif" font-size="18.00">runtime</text>
<text text-anchor="middle" x="395" y="-29.6" font-family="Times,serif" font-size="18.00">acquirem</text>
<text text-anchor="middle" x="395" y="-9.6" font-family="Times,serif" font-size="18.00">10ms (12.50%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N5 -->
<g id="edge8" class="edge">
<title>N1&#45;&gt;N5</title>
<g id="a_edge8"><a xlink:title="runtime.mallocgc &#45;&gt; runtime.acquirem (10ms)">
<path fill="none" stroke="#b27642" d="M504.75,-133.84C483.08,-114.32 459.14,-92.77 439.17,-74.78"/>
<polygon fill="#b27642" stroke="#b27642" points="441.5,-72.16 431.72,-68.07 436.81,-77.37 441.5,-72.16"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="runtime.mallocgc &#45;&gt; runtime.acquirem (10ms)">
<text text-anchor="middle" x="503" y="-97.3" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="runtime.getMCache (10ms)">
<polygon fill="#ede5de" stroke="#b27642" points="642.5,-68 489.5,-68 489.5,0 642.5,0 642.5,-68"/>
<text text-anchor="middle" x="566" y="-49.6" font-family="Times,serif" font-size="18.00">runtime</text>
<text text-anchor="middle" x="566" y="-29.6" font-family="Times,serif" font-size="18.00">getMCache</text>
<text text-anchor="middle" x="566" y="-9.6" font-family="Times,serif" font-size="18.00">10ms (12.50%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N6 -->
<g id="edge9" class="edge">
<title>N1&#45;&gt;N6</title>
<g id="a_edge9"><a xlink:title="runtime.mallocgc &#45;&gt; runtime.getMCache (10ms)">
<path fill="none" stroke="#b27642" d="M566,-133.84C566,-115.68 566,-95.76 566,-78.59"/>
<polygon fill="#b27642" stroke="#b27642" points="569.5,-78.3 566,-68.3 562.5,-78.3 569.5,-78.3"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="runtime.mallocgc &#45;&gt; runtime.getMCache (10ms)">
<text text-anchor="middle" x="593.5" y="-104.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
<text text-anchor="middle" x="593.5" y="-89.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="runtime.nextFreeFast (10ms)">
<polygon fill="#ede5de" stroke="#b27642" points="813.5,-68 660.5,-68 660.5,0 813.5,0 813.5,-68"/>
<text text-anchor="middle" x="737" y="-49.6" font-family="Times,serif" font-size="18.00">runtime</text>
<text text-anchor="middle" x="737" y="-29.6" font-family="Times,serif" font-size="18.00">nextFreeFast</text>
<text text-anchor="middle" x="737" y="-9.6" font-family="Times,serif" font-size="18.00">10ms (12.50%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N8 -->
<g id="edge10" class="edge">
<title>N1&#45;&gt;N8</title>
<g id="a_edge10"><a xlink:title="runtime.mallocgc &#45;&gt; runtime.nextFreeFast (10ms)">
<path fill="none" stroke="#b27642" d="M627.25,-133.84C648.92,-114.32 672.86,-92.77 692.83,-74.78"/>
<polygon fill="#b27642" stroke="#b27642" points="695.19,-77.37 700.28,-68.07 690.5,-72.16 695.19,-77.37"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="runtime.mallocgc &#45;&gt; runtime.nextFreeFast (10ms)">
<text text-anchor="middle" x="703.5" y="-104.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
<text text-anchor="middle" x="703.5" y="-89.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="runtime.main (80ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="609.5,-698.5 522.5,-698.5 522.5,-662.5 609.5,-662.5 609.5,-698.5"/>
<text text-anchor="middle" x="566" y="-687.6" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="566" y="-678.6" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="566" y="-669.6" font-family="Times,serif" font-size="8.00">0 of 80ms (100%)</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="main.main (80ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="609.5,-562 522.5,-562 522.5,-526 609.5,-526 609.5,-562"/>
<text text-anchor="middle" x="566" y="-551.1" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="566" y="-542.1" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="566" y="-533.1" font-family="Times,serif" font-size="8.00">0 of 80ms (100%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N3 -->
<g id="edge1" class="edge">
<title>N2&#45;&gt;N3</title>
<g id="a_edge1"><a xlink:title="runtime.main &#45;&gt; main.main (80ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M566,-662.47C566,-639.85 566,-599.64 566,-572.64"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="571.25,-572.32 566,-562.32 560.75,-572.32 571.25,-572.32"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="runtime.main &#45;&gt; main.main (80ms)">
<text text-anchor="middle" x="588" y="-583.8" font-family="Times,serif" font-size="14.00"> 80ms</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="main.readbyte (70ms)">
<polygon fill="#edd6d5" stroke="#b20700" points="613.5,-444 518.5,-444 518.5,-408 613.5,-408 613.5,-444"/>
<text text-anchor="middle" x="566" y="-433.1" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="566" y="-424.1" font-family="Times,serif" font-size="8.00">readbyte</text>
<text text-anchor="middle" x="566" y="-415.1" font-family="Times,serif" font-size="8.00">0 of 70ms (87.50%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N4 -->
<g id="edge2" class="edge">
<title>N3&#45;&gt;N4</title>
<g id="a_edge2"><a xlink:title="main.main &#45;&gt; main.readbyte (70ms)">
<path fill="none" stroke="#b20700" stroke-width="5" d="M566,-525.88C566,-507.04 566,-476.47 566,-454.3"/>
<polygon fill="#b20700" stroke="#b20700" stroke-width="5" points="570.38,-454.19 566,-444.19 561.63,-454.19 570.38,-454.19"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="main.main &#45;&gt; main.readbyte (70ms)">
<text text-anchor="middle" x="593.5" y="-496.8" font-family="Times,serif" font-size="14.00"> 70ms</text>
<text text-anchor="middle" x="593.5" y="-481.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node">
<title>N9</title>
<g id="a_node9"><a xlink:title="unicode.IsSpace (10ms)">
<polygon fill="#ede5de" stroke="#b27642" points="784.5,-460 631.5,-460 631.5,-392 784.5,-392 784.5,-460"/>
<text text-anchor="middle" x="708" y="-441.6" font-family="Times,serif" font-size="18.00">unicode</text>
<text text-anchor="middle" x="708" y="-421.6" font-family="Times,serif" font-size="18.00">IsSpace</text>
<text text-anchor="middle" x="708" y="-401.6" font-family="Times,serif" font-size="18.00">10ms (12.50%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N9 -->
<g id="edge6" class="edge">
<title>N3&#45;&gt;N9</title>
<g id="a_edge6"><a xlink:title="main.main &#45;&gt; unicode.IsSpace (10ms)">
<path fill="none" stroke="#b27642" d="M597.83,-525.99C606.9,-520.65 616.59,-514.45 625,-508 640.77,-495.9 656.72,-481.09 670.37,-467.46"/>
<polygon fill="#b27642" stroke="#b27642" points="673.16,-469.6 677.7,-460.03 668.18,-464.69 673.16,-469.6"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="main.main &#45;&gt; unicode.IsSpace (10ms)">
<text text-anchor="middle" x="680" y="-489.3" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node">
<title>N10</title>
<g id="a_node10"><a xlink:title="bufio.(*Reader).Read (10ms)">
<polygon fill="#ede5de" stroke="#b27642" points="453.5,-341 358.5,-341 358.5,-297 453.5,-297 453.5,-341"/>
<text text-anchor="middle" x="406" y="-330.6" font-family="Times,serif" font-size="8.00">bufio</text>
<text text-anchor="middle" x="406" y="-321.6" font-family="Times,serif" font-size="8.00">(*Reader)</text>
<text text-anchor="middle" x="406" y="-312.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="406" y="-303.6" font-family="Times,serif" font-size="8.00">0 of 10ms (12.50%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N10 -->
<g id="edge7" class="edge">
<title>N4&#45;&gt;N10</title>
<g id="a_edge7"><a xlink:title="main.readbyte &#45;&gt; bufio.(*Reader).Read (10ms)">
<path fill="none" stroke="#b27642" d="M539.94,-407.9C514.63,-391.29 475.84,-365.84 446.51,-346.59"/>
<polygon fill="#b27642" stroke="#b27642" points="448.41,-343.64 438.12,-341.08 444.56,-349.49 448.41,-343.64"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="main.readbyte &#45;&gt; bufio.(*Reader).Read (10ms)">
<text text-anchor="middle" x="508" y="-362.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node">
<title>N11</title>
<g id="a_node11"><a xlink:title="runtime.newobject (60ms)">
<polygon fill="#edd7d5" stroke="#b20e00" points="613.5,-337 518.5,-337 518.5,-301 613.5,-301 613.5,-337"/>
<text text-anchor="middle" x="566" y="-326.1" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="566" y="-317.1" font-family="Times,serif" font-size="8.00">newobject</text>
<text text-anchor="middle" x="566" y="-308.1" font-family="Times,serif" font-size="8.00">0 of 60ms (75.00%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N11 -->
<g id="edge3" class="edge">
<title>N4&#45;&gt;N11</title>
<g id="a_edge3"><a xlink:title="main.readbyte &#45;&gt; runtime.newobject (60ms)">
<path fill="none" stroke="#b20e00" stroke-width="4" d="M566,-407.66C566,-391.22 566,-366.28 566,-347.19"/>
<polygon fill="#b20e00" stroke="#b20e00" stroke-width="4" points="569.5,-347.02 566,-337.02 562.5,-347.02 569.5,-347.02"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="main.readbyte &#45;&gt; runtime.newobject (60ms)">
<text text-anchor="middle" x="588" y="-362.8" font-family="Times,serif" font-size="14.00"> 60ms</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="runtime.memmove (10ms)">
<polygon fill="#ede5de" stroke="#b27642" points="434.5,-224 281.5,-224 281.5,-156 434.5,-156 434.5,-224"/>
<text text-anchor="middle" x="358" y="-205.6" font-family="Times,serif" font-size="18.00">runtime</text>
<text text-anchor="middle" x="358" y="-185.6" font-family="Times,serif" font-size="18.00">memmove</text>
<text text-anchor="middle" x="358" y="-165.6" font-family="Times,serif" font-size="18.00">10ms (12.50%)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N7 -->
<g id="edge5" class="edge">
<title>N10&#45;&gt;N7</title>
<g id="a_edge5"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.memmove (10ms)">
<path fill="none" stroke="#b27642" d="M397.97,-296.74C391.49,-279.6 382.16,-254.93 374.15,-233.74"/>
<polygon fill="#b27642" stroke="#b27642" points="377.39,-232.4 370.58,-224.28 370.84,-234.87 377.39,-232.4"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.memmove (10ms)">
<text text-anchor="middle" x="413" y="-267.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N1 -->
<g id="edge4" class="edge">
<title>N11&#45;&gt;N1</title>
<g id="a_edge4"><a xlink:title="runtime.newobject &#45;&gt; runtime.mallocgc (60ms)">
<path fill="none" stroke="#b20e00" stroke-width="4" d="M566,-300.87C566,-289.15 566,-272.8 566,-256.29"/>
<polygon fill="#b20e00" stroke="#b20e00" stroke-width="4" points="569.5,-256.03 566,-246.03 562.5,-256.03 569.5,-256.03"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="runtime.newobject &#45;&gt; runtime.mallocgc (60ms)">
<text text-anchor="middle" x="588" y="-267.8" font-family="Times,serif" font-size="14.00"> 60ms</text>
</a>
</g>
</g>
</g>
</g></svg>
